diff --git a/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.d.ts b/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.d.ts
index 2125fc5..c1fd95f 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.d.ts
+++ b/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.d.ts
@@ -8,6 +8,7 @@ declare type Data = {
     setState: (steps: Execute['steps']) => any;
     handleError?: (err: any) => any;
     handleSuccess?: () => any;
+    setTxHash?: (hash: string) => void;
 };
 /**
  * Accept an offer to buy your token
diff --git a/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.js b/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.js
index ce03f00..f71249f 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.js
+++ b/node_modules/@reservoir0x/client-sdk/dist/actions/acceptOffer.js
@@ -23,16 +23,17 @@ const utils_1 = require("../utils");
  */
 function acceptOffer(data) {
     return __awaiter(this, void 0, void 0, function* () {
-        const { query, expectedPrice, signer, apiBase, setState, handleSuccess, handleError, } = data;
+        const { query, expectedPrice, signer, apiBase, setState, handleSuccess, handleError, setTxHash } = data;
         if (!signer || !apiBase) {
             console.debug(data);
             throw new ReferenceError('Some data is missing');
         }
+        console.log("hello");
         try {
             // Construct an URL object for the `/execute/sell` endpoint
             const url = new URL('/execute/sell/v2', apiBase);
             (0, utils_1.setParams)(url, query);
-            yield (0, utils_1.executeSteps)(url, signer, setState, undefined, expectedPrice);
+            yield (0, utils_1.executeSteps)(url, signer, setState, undefined, expectedPrice, setTxHash);
             if (handleSuccess)
                 handleSuccess();
         }
diff --git a/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.d.ts b/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.d.ts
index a076606..800ee98 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.d.ts
+++ b/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.d.ts
@@ -8,6 +8,7 @@ declare type Data = {
     setState: (steps: Execute['steps']) => any;
     handleError?: (err: any) => any;
     handleSuccess?: () => any;
+    setTxHash?: (hash: string) => void;
 };
 /**
  * Instantly buy a token
diff --git a/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.js b/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.js
index 6c85b09..f0575bb 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.js
+++ b/node_modules/@reservoir0x/client-sdk/dist/actions/buyToken.js
@@ -23,7 +23,7 @@ const utils_1 = require("../utils");
  */
 function buyToken(data) {
     return __awaiter(this, void 0, void 0, function* () {
-        const { query, expectedPrice, signer, apiBase, setState, handleSuccess, handleError, } = data;
+        const { query, expectedPrice, signer, apiBase, setState, handleSuccess, handleError, setTxHash } = data;
         if (!signer || !apiBase) {
             console.debug(data);
             throw new ReferenceError('Some data is missing');
@@ -32,7 +32,7 @@ function buyToken(data) {
             // Construct an URL object for the `/execute/buy` endpoint
             const url = new URL('/execute/buy/v1', apiBase);
             (0, utils_1.setParams)(url, query);
-            yield (0, utils_1.executeSteps)(url, signer, setState, undefined, expectedPrice);
+            yield (0, utils_1.executeSteps)(url, signer, setState, undefined, expectedPrice, setTxHash);
             if (handleSuccess)
                 handleSuccess();
         }
diff --git a/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.d.ts b/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.d.ts
index d823498..86ecf35 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.d.ts
+++ b/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.d.ts
@@ -7,6 +7,7 @@ declare type Data = {
     setState: (steps: Execute['steps']) => any;
     handleError?: (err: any) => any;
     handleSuccess?: () => any;
+    setTxHash?: (hash: string) => void;
 };
 /**
  * Cancel an offer or listing
diff --git a/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.js b/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.js
index 7569c6d..81d3e77 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.js
+++ b/node_modules/@reservoir0x/client-sdk/dist/actions/cancelOrder.js
@@ -22,7 +22,7 @@ const utils_1 = require("../utils");
  */
 function cancelOrder(data) {
     return __awaiter(this, void 0, void 0, function* () {
-        const { query, signer, apiBase, setState, handleSuccess, handleError } = data;
+        const { query, signer, apiBase, setState, handleSuccess, handleError, setTxHash } = data;
         if (!signer || !apiBase) {
             console.debug(data);
             throw new ReferenceError('Some data is missing');
@@ -31,7 +31,7 @@ function cancelOrder(data) {
             // Construct an URL object for the `/execute/cancel/v1` endpoint
             const url = new URL('/execute/cancel/v1', apiBase);
             (0, utils_1.setParams)(url, query);
-            yield (0, utils_1.executeSteps)(url, signer, setState);
+            yield (0, utils_1.executeSteps)(url, signer, setState, undefined, undefined, setTxHash);
             if (handleSuccess)
                 handleSuccess();
         }
diff --git a/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.d.ts b/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.d.ts
index 3d3ee44..c34c4d6 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.d.ts
+++ b/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.d.ts
@@ -13,4 +13,4 @@ import { Signer } from 'ethers';
  * @param expectedPrice Token price used to prevent to protect buyer from price moves. Pass the number with unit 'ether'. Example: `1.543` means 1.543 ETH
  * @returns The data field of the last element in the steps array
  */
-export declare function executeSteps(url: URL, signer: Signer, setState: (steps: Execute['steps']) => any, newJson?: Execute, expectedPrice?: number): Promise<void>;
+export declare function executeSteps(url: URL, signer: Signer, setState: (steps: Execute['steps']) => any, newJson?: Execute, expectedPrice?: number, setTxHash?: (hash: string) => void): Promise<void>;
diff --git a/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.js b/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.js
index 436a7e1..605b4bf 100644
--- a/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.js
+++ b/node_modules/@reservoir0x/client-sdk/dist/utils/executeSteps.js
@@ -26,7 +26,7 @@ const params_1 = require("./params");
  * @param expectedPrice Token price used to prevent to protect buyer from price moves. Pass the number with unit 'ether'. Example: `1.543` means 1.543 ETH
  * @returns The data field of the last element in the steps array
  */
-function executeSteps(url, signer, setState, newJson, expectedPrice) {
+function executeSteps(url, signer, setState, newJson, expectedPrice, setTxHash) {
     return __awaiter(this, void 0, void 0, function* () {
         try {
             let json = newJson;
@@ -84,6 +84,8 @@ function executeSteps(url, signer, setState, newJson, expectedPrice) {
                     json.steps[incompleteIndex].message = 'Waiting for user to confirm';
                     setState([...json === null || json === void 0 ? void 0 : json.steps]);
                     const tx = yield signer.sendTransaction(data);
+                    console.log(setTxHash);
+                    setTxHash(tx.hash);
                     json.steps[incompleteIndex].message = 'Finalizing on blockchain';
                     setState([...json === null || json === void 0 ? void 0 : json.steps]);
                     yield tx.wait();
